---
import Layout from "@layouts/Layout.astro";
import ItemPreview from "@components/ItemPreview.astro";
import Pagination from "@components/Pagination.astro";
import getPage from "@modules/getPage";

const page = getPage(Astro);
const filter = Astro.url.searchParams.get("filter");

let requestUrl = import.meta.env.HN_API;
switch (filter) {
  case "new":
    requestUrl += "/newstories.json";
    break;
  case "top":
    requestUrl += "/beststories.json";
    break;
  default:
    requestUrl += "/topstories.json";
    break;
}

const req = await fetch(requestUrl);

const data: undefined | number[] = await req.json();
if (!data) return Astro.redirect("/404");

const posts = await Promise.all(
  data
    .splice(20 * (page - 1), 20)
    .map((id) =>
      fetch(`${import.meta.env.HN_API}/item/${id}.json`).then(async (resp) => await resp.json()),
    ),
);

if (posts.length === 0) return Astro.redirect("/404");

const isLastPage = posts.length < 20;
---

<Layout title="News">
  <div class="flex flex-col gap-3">
    {posts.map((post) => post.type == "story" && <ItemPreview data={post} />)}
  </div>
  {!isLastPage && <Pagination />}
</Layout>
