---
import { Icon } from "astro-icon/components";
import xss from "xss";

import getRelativeTime from "@modules/getRelativeTime";
import RItem from "./Item.astro";

export interface Props {
  data: any;
}
const { data } = Astro.props;
---

<div class="py-3">
  <div
    class={`m-auto flex w-full max-w-screen-md flex-col
    justify-between border-l border-neutral-500/40 pl-4`}
  >
    <div class="flex w-full flex-col break-words rounded-md">
      <!-- Author and time -->
      <div class="flex flex-col">
        <div class="text-sm">
          <a href={`/@${data.by}`} class="text-blue-500 hover:underline">
            {data.by}
          </a>
          <span>â€¢</span>
          <span>{getRelativeTime(data.time)}</span>
        </div>
      </div>
      <!-- Post preview -->
      {
        data.text && (
          <div class="overflow-y-hidden break-words">
            <p class="p-0" set:html={xss(data.text)} />
          </div>
        )
      }
    </div>
    <!-- Replies -->
    {
      Astro.url.pathname == `/item/${data.id}` ? (
        <div class="flex items-center gap-1 text-sm">
          <Icon name="comment" class="h-5 w-5" />
          <span>{data.kids.length | 0}</span>
        </div>
      ) : (
        <div class="flex gap-1 text-sm">
          {data.kids.length > 0 && (
            <a href={`/item/${data.id}`} class="text-blue-500 hover:underline">
              {`${data.kids.length} ${data.kids.length == 1 ? "reply" : "replies"}`}
            </a>
          )}
        </div>
      )
    }
    <!-- Nested comments (recursive) -->
    <div>
      {data.kids && data.kids.map((kid: any) => <RItem data={kid} />)}
    </div>
  </div>
</div>
